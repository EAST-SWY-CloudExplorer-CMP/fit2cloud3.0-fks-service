<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fit2cloud.fks.dao.ext.ExtYamlRepositoryMapper">
  <resultMap id="BaseResultMap" type="com.fit2cloud.fks.model.YamlRepository">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="yaml_content" jdbcType="VARCHAR" property="yamlContent" />
  </resultMap>

  <sql id="Base_Column_List">
    id, name, version, description, create_time, yaml_content
  </sql>

  <select id="listRepository" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yaml_repository
    where 1=1
    <if test="name!=null">
      and name like #{name}
    </if>
    <if test="version!=null">
      and version like #{version}
    </if>
    <if test="sort!=null">
      order by ${sort}
    </if>
    <if test="sort == null">
      order by name
    </if>
  </select>

  <select id="selectByNameAndVersion" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yaml_repository
    where name = #{name ,jdbcType=VARCHAR} and version = #{version,jdbcType=VARCHAR}
  </select>

  <update id="updateByNameAndVersion" parameterType="com.fit2cloud.fks.model.YamlRepository">
    update yaml_repository
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="yamlContent != null">
        yaml_content = #{yamlContent,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>